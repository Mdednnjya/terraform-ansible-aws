- name: Install Docker and deploy Flask container
  hosts: web
  become: yes
  tasks:
    - name: Install required packages
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      loop:
        - docker.io
        - python3-pip

    - name: Start Docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Create Flask app directory
      file:
        path: /home/ubuntu/flaskapp
        state: directory

    - name: Copy Dockerfile
      copy:
        dest: /home/ubuntu/flaskapp/Dockerfile
        content: |
          FROM python:3
          RUN pip install flask
          COPY app.py /app.py
          CMD ["python", "/app.py"]

    - name: Copy app.py
      copy:
        dest: /home/ubuntu/flaskapp/app.py
        content: |
          from flask import Flask
          app = Flask(__name__)
          @app.route('/')
          def hello():
              return "Flask from Docker!"
          if __name__ == "__main__":
              app.run(host='0.0.0.0', port=80)

    - name: Build Docker image
      shell: docker build -t flaskapp /home/ubuntu/flaskapp
      args:
        chdir: /home/ubuntu/flaskapp

    - name: Stop container using port 80 (if any)
      shell: |
        container_id=$(docker ps --filter "publish=80" --format "{{ '{{' }}.ID{{ '}}' }}")
        if [ ! -z "$container_id" ]; then
          docker stop $container_id
        fi
      ignore_errors: true

    - name: Try to run container on port 80
      shell: docker run -d -p 80:80 flaskapp
      register: result
      failed_when: false

    - name: Fallback to port 8080 if port 80 fails
      shell: docker run -d -p 8080:80 flaskapp
      when: result.rc != 0
